(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{383:function(t,a,s){t.exports=s.p+"assets/img/Figure-2-1.858a7343.png"},384:function(t,a,s){t.exports=s.p+"assets/img/Figure-2-2.e3b07932.png"},415:function(t,a,s){"use strict";s.r(a);var n=s(44),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"第-2-章-深入-javafx-程序设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第-2-章-深入-javafx-程序设计"}},[t._v("#")]),t._v(" 第 2 章 深入 JavaFX 程序设计")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("在本章节")])]),t._v(" "),n("ul",[n("li",[t._v("导入创建 JavaFX 程序所需的类")]),t._v(" "),n("li",[t._v("创建一个继承 JavaFX "),n("code",[t._v("Application")]),t._v(" 类的类")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("Button")]),t._v("、"),n("code",[t._v("BorderPane")]),t._v(" 和 "),n("code",[t._v("Scene")]),t._v(" 等类创建用户界面")]),t._v(" "),n("li",[t._v("创建用户单击按钮时调用的事件处理程序")]),t._v(" "),n("li",[t._v("验证 Click Me 程序的增强版本")])])]),t._v(" "),n("p",[t._v("在第 1 章中，我介绍了名为 Click Me 的简单的 JavaFX 程序，并简单描述了它是如何工作的。本章中，我会把这个程序放在显微镜下，进行详细研究。阅读完本章，你将了解 Click Me 程序的每一行是如何工作的，以及为什么需要这样做。然后， 你就可以开始研究 JavaFX 编程更细微的技术了。")]),t._v(" "),n("h2",{attrs:{id:"再看-click-me-程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#再看-click-me-程序"}},[t._v("#")]),t._v(" 再看 Click Me 程序")]),t._v(" "),n("p",[t._v("图 2-1 展示了运行中的 Click Me 程序。若你所见，上面显示了一个包含 "),n("code",[t._v("Click me please!")]),t._v(" 几个字的简单按钮。图中没有展示出来的是，当用户单击按钮时，它上面的文字将变成 "),n("code",[t._v("I’ve Been Clicked!")]),t._v("。")]),t._v(" "),n("blockquote",[n("p",[t._v("图 2-1：运行中的 Click Me 程序。")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(383),alt:"Figure 2-1"}})]),t._v(" "),n("p",[t._v("尽管这个程序很简单，但它展示了大多数你需要掌握的用于编写 JavaFX 程序的基本技术：")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ 显示一个用户界面，上面包含一个标准控件 —— 这个例子中是按钮。")]),t._v(" "),n("p",[t._v("✓ 对用户的输入进行响应，出现在用户点击按钮时。")]),t._v(" "),n("p",[t._v("✓ 更新显示以确认用户的操作。")])]),t._v(" "),n("p",[t._v("许多 JavaFX 程序都由这个简单主题变化而来：创建用户界面，响应用户的输入，然后更新显示以反映用户的输入。更为实际的 JavaFX 程序显示的用户界面必定不仅仅只有一个按钮。为响应用户输入而执行的处理还可能包括其他步骤，比如在数据库中查找信息或是执行计算。毫无疑问，显示的内容也将以更复杂的方式进行更新，而不仅仅是更改按钮上显示的文本。不过，在大多数真实的 JavaFX 程序中都可以找到这些基本要素的变体。")]),t._v(" "),n("p",[t._v("清单 2-1 显示了 Click Me 程序的完整代码。本章的剩余部分将对这个程序的每一行进行详细解释。")]),t._v(" "),n("p",[n("strong",[t._v("清单 2-1：Click Me 程序")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("application"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClickMe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stage")]),t._v(" primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the button ")]),t._v("\n    btn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOnAction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the button to a layout pane ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),t._v(" pane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCenter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the layout pane to a scene ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),t._v(" scene "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finalize and show the stage ")]),t._v("\n    primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTitle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The Click Me App"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You clicked me!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"导入-javafx-包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导入-javafx-包"}},[t._v("#")]),t._v(" 导入 JavaFX 包")]),t._v(" "),n("p",[t._v("JavaFX 程序与其他 Java 程序一样，以一系列 "),n("code",[t._v("import")]),t._v(" 语句开头，这些语句引入了程序将会使用的各种 JavaFX 包。Click Me 程序包含了以下五个 "),n("code",[t._v("import")]),t._v(" 语句：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("application"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如你所见，所有的 JavaFX 包都以 "),n("code",[t._v("javafx")]),t._v(" 开头。Click Me 程序使用的类来自五个不同的 JavaFX 包：")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("✓ "),n("code",[t._v("javafx.application")]),t._v("：")]),t._v(" 这个包中定义了所有 JavaFX 应用程序都依赖的核心类："),n("code",[t._v("Application")]),t._v("。稍后你会在本章“继承 Application 类”一节中了解到更多关于 "),n("code",[t._v("Application")]),t._v(" 类的信息。")]),t._v(" "),n("p",[n("strong",[t._v("✓ "),n("code",[t._v("javafx.stage")]),t._v("：")]),t._v(" 这个包中最重要的类是 "),n("code",[t._v("Stage")]),t._v("，它定义了所有用户界面对象的顶级容器。"),n("code",[t._v("Stage")]),t._v(" 是 JavaFX 应用程序的最高级别的窗口，应用程序所有的用户界面元素都显示在其中。")]),t._v(" "),n("p",[n("strong",[t._v("✓ "),n("code",[t._v("javafx.scene")]),t._v("：")]),t._v(" 这个包中最重要的类是 "),n("code",[t._v("Scene")]),t._v("，它是一个容纳着程序显示的所有用户界面元素的容器。")]),t._v(" "),n("p",[n("strong",[t._v("✓ "),n("code",[t._v("javafx.scene.layout")]),t._v("：")]),t._v(" 这个包中定义了一种特殊类型的用户界面元素，布局管理器。它们的工作是确定每个控件在用户界面中的显示位置。")]),t._v(" "),n("p",[n("strong",[t._v("✓ "),n("code",[t._v("javafx.scene.control")]),t._v("：")]),t._v(" 这个包中定义了各个用户界面控件对应的类，如按钮、文本框和标签。Click Me 程序只使用了这个包中的一个类："),n("code",[t._v("Button")]),t._v("，它表示一个用户可以点击的按钮。")])]),t._v(" "),n("h2",{attrs:{id:"继承-application-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继承-application-类"}},[t._v("#")]),t._v(" 继承 Application 类")]),t._v(" "),n("p",[t._v("JavaFX 应用程序是一个继承了 "),n("code",[t._v("javafx.application. Application")]),t._v(" 的 Java 类。因此，Click Me 应用程序的主类声明是这样的：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClickMe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),t._v("\n")])])]),n("p",[t._v("在这里，Click Me 应用程序由继承了 "),n("code",[t._v("Application")]),t._v(" 的 "),n("code",[t._v("ClickMe")]),t._v(" 的类定义。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/technical-stuff.png",width:"80"}}),t._v("因为在 Click Me 程序的第 1 行中导入了整个 "),n("code",[t._v("javafx.application")]),t._v(" 包，所以 "),n("code",[t._v("Application")]),t._v(" 类不需要使用全限定名。如果省略了 "),n("code",[t._v("javafx.application")]),t._v(" 包的 "),n("code",[t._v("import")]),t._v(" 语句，"),n("code",[t._v("ClickMe")]),t._v(" 类的声明需要变成这样：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClickMe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("application"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Application")]),t._v("\n")])])]),n("p",[n("code",[t._v("Application")]),t._v(" 类负责管理 JavaFX 应用程序的生命周期。生命周期包括以下步骤：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("创建 "),n("code",[t._v("Application")]),t._v(" 类的一个实例。")])]),t._v(" "),n("li",[n("p",[t._v("调用 "),n("code",[t._v("init")]),t._v(" 方法。")]),t._v(" "),n("p",[n("code",[t._v("init")]),t._v(" 方法的默认实现不做任何事情，可以通过覆盖 "),n("code",[t._v("init")]),t._v(" 方法，在应用程序的用户界面显示之前执行你想要的任何处理。")])]),t._v(" "),n("li",[n("p",[t._v("调用 "),n("code",[t._v("start")]),t._v(" 方法。")]),t._v(" "),n("p",[n("code",[t._v("start")]),t._v(" 方法是一个抽象方法，这意味着 "),n("code",[t._v("Application")]),t._v(" 类没有提供默认实现。因此，你必须提供自己的 "),n("code",[t._v("start")]),t._v(" 方法版本。"),n("code",[t._v("start")]),t._v(" 方法负责构建和显示用户界面。（更多信息，稍后请阅读“重写 start 方法”一节）")])]),t._v(" "),n("li",[n("p",[t._v("等待应用程序结束，这通常发生在用户通过关闭主应用程序窗口或选择程序的退出命令来指示程序结束时。")]),t._v(" "),n("p",[t._v("在此期间，应用程序并不是真正空闲的。相反，它忙于响应用户事件，例如单击按钮或从下拉列表中选择。")])]),t._v(" "),n("li",[n("p",[t._v("调用 "),n("code",[t._v("stop")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("与"),n("code",[t._v("init")]),t._v(" 方法一样，"),n("code",[t._v("stop")]),t._v(" 方法的默认实现没有任何操作。你可以通过覆盖它，以实现在程序结束时执行一些必要的处理，例如关闭数据库或是保存文件。")])])]),t._v(" "),n("h2",{attrs:{id:"启动应用程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动应用程序"}},[t._v("#")]),t._v(" 启动应用程序")]),t._v(" "),n("p",[t._v("你应该知道，"),n("code",[t._v("main")]),t._v(" 方法是 Java 程序的标准入口。以下就是 Click Me 程序的 "),n("code",[t._v("main")]),t._v(" 方法：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如你所见，"),n("code",[t._v("main")]),t._v(" 方法只包含一条语句，即对 "),n("code",[t._v("Application")]),t._v(" 类的 "),n("code",[t._v("launch")]),t._v(" 方法的调用。")]),t._v(" "),n("p",[n("code",[t._v("launch")]),t._v(" 方法实际上是启动 "),n("code",[t._v("JavaFX")]),t._v(" 应用程序的方法。 "),n("code",[t._v("launch")]),t._v(" 方法是静态方法，所以可以在 "),n("code",[t._v("main")]),t._v(" 方法的静态上下文中被调用。它创建了一个 "),n("code",[t._v("Application")]),t._v(" 类实例，然后启动 JavaFX 生命周期，调用 "),n("code",[t._v("init")]),t._v(" 和 "),n("code",[t._v("start")]),t._v(" 方法，等待应用程序完成，再调用 "),n("code",[t._v("stop")]),t._v(" 方法。")]),t._v(" "),n("p",[n("code",[t._v("starty")]),t._v(" 方法直到 JavaFX 应用程序结束时才会返回。假设你为 Click Me 程序编写的 "),n("code",[t._v("main")]),t._v(" 方法是这样的：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Launching JavaFX"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finished"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当 JavaFX 应用程序窗口打开时，你会看到控制台窗口显示 "),n("code",[t._v("Launching JavaFX")]),t._v("。当你关闭 JavaFX 应用程序窗口，你会看到控制台显示 "),n("code",[t._v("Finished")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"重写-start-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重写-start-方法"}},[t._v("#")]),t._v(" 重写 start 方法")]),t._v(" "),n("p",[t._v("每个 JavaFX 应用程序都必须包含一个 "),n("code",[t._v("start")]),t._v(" 方法。在 "),n("code",[t._v("start")]),t._v(" 方法中，你可以编写代码创建与用户进行交互的界面元素。例如，清单 2-1 中的 "),n("code",[t._v("start")]),t._v(" 方法包含的代码展示了一个带有 "),n("code",[t._v("Click me please!")]),t._v(" 字样的按钮。")]),t._v(" "),n("p",[t._v("当 JavaFX 应用程序启动时，JavaFX 框架会在 "),n("code",[t._v("Application")]),t._v(" 类初始化之后调用 "),n("code",[t._v("start")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("Click Me 程序的 "),n("code",[t._v("start")]),t._v(" 方法如下所示：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stage")]),t._v(" primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the button ")]),t._v("\n  btn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOnAction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the button to a layout pane ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),t._v(" pane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCenter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the layout pane to a scene ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),t._v(" scene "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finalize and show the stage ")]),t._v("\n  primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTitle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The Click Me App"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("为了创建 Click Me 程序的用户界面，"),n("code",[t._v("start")]),t._v(" 方法执行了以下四个基本步骤：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("创建一个名为 "),n("code",[t._v("btn")]),t._v(" 的按钮控件，将其文本设置为 "),n("code",[t._v("Click me please!")]),t._v("，并指定用户单击按钮时调用名为 "),n("code",[t._v("buttonClick")]),t._v(" 的方法。")]),t._v(" "),n("p",[t._v("有关此代码的详细说明，请参阅本章后面的“创建按钮”和“处理操作事件”部分。")])]),t._v(" "),n("li",[n("p",[t._v("创建一个名为 "),n("code",[t._v("pane")]),t._v(" 的布局面板，并将按钮添加到其中。")]),t._v(" "),n("p",[t._v("更多细节，请参阅本章后面的“创建布局面板”部分。")])]),t._v(" "),n("li",[n("p",[t._v("创建一个名为 "),n("code",[t._v("scene")]),t._v(" 的场景，并将布局面板添加到其中。")]),t._v(" "),n("p",[t._v("更多细节，请参阅本章后面的“场景搭建”部分。")])]),t._v(" "),n("li",[n("p",[t._v("通过设置场景、设置舞台标题、展示舞台，最终完成舞台（stage）搭建。")]),t._v(" "),n("p",[t._v("请参阅本章后面的“舞台设置”部分了解更多细节。")])])]),t._v(" "),n("p",[t._v("你将在本章后续部分找到这些代码块的相关细节。但是在继续之前，我想额外指出一些有关 start 方法的重要细节：")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ 在 "),n("code",[t._v("Application")]),t._v(" 类中，"),n("code",[t._v("start")]),t._v(" 方法被定义为一个抽象方法，所以当你在 JavaFX 程序中包含 "),n("code",[t._v("start")]),t._v(" 方法时，实际上覆盖了抽象的 start 方法。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/tip.png",width:"50"}}),t._v("尽管不是必需的，但最好还是用 "),n("code",[t._v("@override")]),t._v(" 注解明确声明你重写了 "),n("code",[t._v("start")]),t._v(" 方法。如果省略了这个注解，当你拼错了方法名（例如，写成了 "),n("code",[t._v("Start")]),t._v(" 而不是 "),n("code",[t._v("start")]),t._v("），或者列出的参数不正确，Java 会认为你是在定义一个新方法，而不是覆盖 start 方法。")]),t._v(" "),n("p",[t._v("✓ 与 "),n("code",[t._v("main")]),t._v(" 方法不同，"),n("code",[t._v("start")]),t._v(" 方法不是静态方法。当你从静态 "),n("code",[t._v("main")]),t._v(" 方法调用 "),n("code",[t._v("launch")]),t._v(" 方法时，"),n("code",[t._v("launch")]),t._v(" 方法将创建 "),n("code",[t._v("Application")]),t._v(" 类的一个实例，然后调用 "),n("code",[t._v("start")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("✓ "),n("code",[t._v("start")]),t._v(" 方法接受一个参数："),n("code",[t._v("Stage")]),t._v(" 对象，应用程序的用户界面将在其上进行显示。当应用程序调用你的 "),n("code",[t._v("start")]),t._v(" 方法时，会通过 "),n("code",[t._v("primaryStage")]),t._v(" 参数传递主舞台（primary stage）。因此，你可以在稍后的 "),n("code",[t._v("start")]),t._v(" 方法中使用 "),n("code",[t._v("primaryStage")]),t._v(" 参数来引用应用程序的舞台。")])]),t._v(" "),n("h2",{attrs:{id:"创建按钮"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建按钮"}},[t._v("#")]),t._v(" 创建按钮")]),t._v(" "),n("p",[t._v("Click Me 程序显示的按钮是使用名为 "),n("code",[t._v("Button")]),t._v(" 的类创建的。该类是可用于创建用户界面控件的众多类之一。 "),n("code",[t._v("Button")]),t._v(" 和其他大多数控件类可以在 "),n("code",[t._v("javafx.scene.control")]),t._v("  包中找到。")]),t._v(" "),n("p",[t._v("要创建一个按钮，只需定义一个 "),n("code",[t._v("Button")]),t._v(" 类型的变量，然后调用它的构造函数：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nbtn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("在清单 2-1 中的代码中，"),n("code",[t._v("btn")]),t._v(" 在 "),n("code",[t._v("start")]),t._v(" 方法之外声明为类变量，而 "),n("code",[t._v("Button")]),t._v(" 对象实际上是在 "),n("code",[t._v("start")]),t._v(" 方法内创建的。控件通常声明为类变量，以便你可以在类中定义的任何方法中访问它们。正如你会在下一节（“处理操作事件”）了解到的，当用户单击按钮时，将调用一个名为 "),n("code",[t._v("buttonClicked")]),t._v(" 的单独方法。通过将 "),n("code",[t._v("btn")]),t._v(" 定义为类变量，"),n("code",[t._v("start")]),t._v(" 方法和 "),n("code",[t._v("buttonClicked")]),t._v(" 方法都可以对它进行访问。")]),t._v(" "),n("p",[t._v("要设置按钮显示的文本，可以调用 "),n("code",[t._v("setText")]),t._v(" 方法，并将要显示的文本作为字符串进行传递：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("以下是有关按钮的一些趣闻：")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ "),n("code",[t._v("Button")]),t._v(" 构造函数允许你把要在按钮上显示的文本作为参数传递，如下：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Btn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如果以这种方式设置按钮的文本，就不需要再调用 "),n("code",[t._v("setTitle")]),t._v(" 方法。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/technical-stuff.png",width:"50"}}),t._v(" ✓ "),n("code",[t._v("Button")]),t._v(" 类是父类 "),n("code",[t._v("javafx.scene.control.Control")]),t._v(" 派生的众多类之一。该类还派生了许多其他类，包括 "),n("code",[t._v("Label")]),t._v("，"),n("code",[t._v("TextField")]),t._v("，"),n("code",[t._v("ComboBox")]),t._v("，"),n("code",[t._v("CheckBox")]),t._v(" 和 "),n("code",[t._v("RadioButton")]),t._v("。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/technical-stuff.png",width:"50"}}),t._v("✓ "),n("code",[t._v("Control")]),t._v(" 类是从更高级别的父类 "),n("code",[t._v("javafx.scene.Node")]),t._v(" 派生的几种类之一。"),n("code",[t._v("Node")]),t._v(" 是所有可以在场景中显示的用户界面元素的基类。控件是一种特定类型的节点，除此之外，还有其他类型的节点。换句话说，所有控件都是节点，但并非所有节点都是控件。你可以在本书后面的内容中详细了解其他几种类型的节点。")])]),t._v(" "),n("h2",{attrs:{id:"处理活动事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#处理活动事件"}},[t._v("#")]),t._v(" 处理活动事件")]),t._v(" "),n("p",[t._v("用户单击按钮时，会触发一个活动事件。你的程序可以通过提供一个事件处理程序（指的是一些在事件发生时执行的代码）来响应事件。Click Me 程序便是通过给按钮设置代码为更改按钮上显示文本的处理程序来工作。")]),t._v(" "),n("p",[t._v("正如你从第 3 章读到的，JavaFX 中有几种处理事件的方法。现在，我简要介绍最简单的方法，它只需要你指定事件发生时调用的方法，并提供实现该方法的代码。")]),t._v(" "),n("p",[t._v("要指定用户单击按钮时调用的方法，可以调用 "),n("code",[t._v("Button")]),t._v(" 类的 "),n("code",[t._v("setOnAction")]),t._v(" 方法。如清单 2-1 所示：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOnAction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:"assets/tip.png",width:"80"}}),t._v("这里使用的语法可能看起来有点陌生，因为它使用了 Java 8 的一个新特性 —— Lambda 表达式。在示例中，这个新语法包含三个元素：")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ 参数 "),n("code",[t._v("e")]),t._v(" 表示一个 "),n("code",[t._v("ActionEvent")]),t._v(" 类型的对象，程序可以使用它来获取事件的详细信息。")]),t._v(" "),n("p",[t._v("Click Me 程序忽略了这个参数，你也可以忽略它，至少现在是这样。")]),t._v(" "),n("p",[t._v("✓ 箭头操作符（->）是 Java 8 中引入的用于 Lambda 表达式的新运算符。")]),t._v(" "),n("p",[t._v("✓ "),n("code",[t._v("buttonClick()")]),t._v(" 简单地调用名为 "),n("code",[t._v("buttonClick")]),t._v(" 的方法。")])]),t._v(" "),n("p",[t._v("我将在第 3 章讨论 Lambda 表达式。")]),t._v(" "),n("p",[t._v("在将 "),n("code",[t._v("buttonClick")]),t._v(" 作为用户单击按钮时调用的方法之后，下一步是编写 "),n("code",[t._v("buttonClick")]),t._v(" 方法的代码。你可以在清单 2-1 的底部找到它：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You clicked me!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("该方法使用 "),n("code",[t._v("if")]),t._v(" 语句交替地将按钮显示的文本更改为 "),n("code",[t._v("You clicked me!")]),t._v(" 或 "),n("code",[t._v("Click me please!")]),t._v("。换句话说，如果按钮上的文本是 "),n("code",[t._v("Click me please!")]),t._v("，当用户单击按钮时，"),n("code",[t._v("buttonClicked")]),t._v(" 方法会把它改为 "),n("code",[t._v("You clicked me!")]),t._v("。反之，"),n("code",[t._v("if")]),t._v(" 语句会将按钮的文本更改回 "),n("code",[t._v("Click me please!")]),t._v("。")]),t._v(" "),n("p",[n("code",[t._v("buttonClicked")]),t._v(" 使用 "),n("code",[t._v("Button")]),t._v(" 类的两个方法来完成它的工作：")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("✓ getText：")]),t._v(" 以字符串形式返回按钮上显示的文本")]),t._v(" "),n("p",[n("strong",[t._v("✓ setText：")]),t._v(" 设置按钮显示的文本")])]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/cross-reference.png",width:"80"}}),t._v("有关处理事件的更多信息，请参阅第 3 章。")]),t._v(" "),n("h2",{attrs:{id:"创建布局面板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建布局面板"}},[t._v("#")]),t._v(" 创建布局面板")]),t._v(" "),n("p",[t._v("光有按钮没什么作用，你必须将它显示在屏幕上，用户才能对它进行点击。实际的 JavaFX 程序都有不止一个控件。当你将第二个控件添加到用户界面时，你需要一种方法来指定控件之间的相对位置。比如，如果你的应用程序有两个按钮，你是希望它们一个在另一个之上垂直堆放，还是并排摆放?")]),t._v(" "),n("p",[t._v("此时，布局面板就能派上用场。布局面板是容器类的一种，你可以往其中添加一个或多个用户界面元素。布局面板会根据这些元素的相对关系决定如何准确地显示它们。")]),t._v(" "),n("p",[t._v("要使用布局面板，首先要创建它的实例。然后，将一个或多个控件添加到面板中。在这一步，你可以指定面板显示时控件是如何摆放的细节。将所有的控件添加到面板中并进行排列后，再将面板添加到场景中。")]),t._v(" "),n("p",[t._v("JavaFX 总共提供了 8 种不同类型的布局面板，都是由 "),n("code",[t._v("javafx.scene.layout")]),t._v(" 包中类定义的。Click Me 程序使用了一种称为边界面板的布局类型，它将面板中的内容摆放在五个常规区域：顶部、左侧、右侧、底部和中心。"),n("code",[t._v("BorderPane")]),t._v(" 类非常适合这样的布局：在顶部有菜单和工具栏，在底部有状态栏，可选任务面板或工具栏在左边或右边，主工作区域在屏幕中央。")]),t._v(" "),n("p",[t._v("Click Me 程序中创建边界面板的代码是：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),t._v(" pane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \npane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCenter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("在这里，声明了一个名为 "),n("code",[t._v("pane")]),t._v(" 的 "),n("code",[t._v("BorderPane")]),t._v(" 类型的变量，并调用 "),n("code",[t._v("BorderPane")]),t._v(" 构造函数创建了一个新的 "),n("code",[t._v("BorderPane")]),t._v(" 对象。然后，使用 "),n("code",[t._v("setCenter")]),t._v(" 方法将按钮（btn）显示在面板的中心区域。")]),t._v(" "),n("p",[t._v("以下是有关布局面板一些其他有趣的细节：")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ 布局面板会根据布局中包含的元素的大小以及显示布局面板的空间的大小，自动调整其所包含元素的位置。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/technical-stuff.png",width:"50"}}),t._v(" ✓ 前面说过，控件是一种节点，你将在本书后面的内容中了解其他类型的节点。是的，如你刚刚读到的，布局面板也是一种节点。")]),t._v(" "),n("p",[t._v("✓ 边界面板的每个区域都可以包含一个节点。因为布局面板本身是节点的一种，所以边界窗格的每个区域都可以包含另一个布局面板。例如，假设你想在边界面板的中心区域显示三个控件。为此，你需要创建第二个布局面板并将三个控件添加到其中。然后，将第二个布局面板设置到第一个布局面板的中心区域。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/cross-reference.png",width:"50"}}),t._v("✓ 你可以在第 5 章阅读到更多关于 "),n("code",[t._v("BorderPane")]),t._v(" 类和其他常用的布局面板相关的内容。在第 13 章中，你还将了解到一些不常用的布局面板。")])]),t._v(" "),n("h2",{attrs:{id:"场景搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#场景搭建"}},[t._v("#")]),t._v(" 场景搭建")]),t._v(" "),n("p",[t._v("在创建了包含要显示的控件的布局面板之后，下一步是创建一个用于显示布局面板的场景（scene）。可以用一行代码声明 "),n("code",[t._v("Scene")]),t._v(" 类型的变量并调用它的构造函数来完成此操作。以下是我在 Click Me 程序中的做法：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),t._v(" scene "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("Scene")]),t._v(" 类的构造函数接受三个参数：")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ 一个 "),n("code",[t._v("node")]),t._v(" 对象，代表场景中显示的根节点（root node）。")]),t._v(" "),n("p",[t._v("一个场景只能有一个根节点，因此根节点通常是一个布局面板，该面板依次包含要显示的其他控件。在 Click Me 程序中，根节点是包含着按钮的边界布局面板。")]),t._v(" "),n("p",[t._v("✓ 场景宽度（以像素为单位）。")]),t._v(" "),n("p",[t._v("✓ 场景高度（以像素为单位）。")])]),t._v(" "),n("p",[t._v("注意：如果省略宽度和高度，将根据根节点中包含的元素的大小自动调整场景的大小。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/cross-reference.png",width:"80"}}),t._v("你可以在第 4 章中找到 "),n("code",[t._v("Scene")]),t._v(" 类的一些其他功能。")]),t._v(" "),n("h2",{attrs:{id:"舞台设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#舞台设置"}},[t._v("#")]),t._v(" 舞台设置")]),t._v(" "),n("p",[t._v("如果场景（scene）表示应用程序所有要显示的节点（控件和布局面板），那么舞台（stage ）就表示显示场景的窗口。当 JavaFX 框架调用应用程序的 "),n("code",[t._v("start")]),t._v(" 方法时，会通过 "),n("code",[t._v("primaryStage")]),t._v(" 参数传递一个 "),n("code",[t._v("Stage")]),t._v(" 类的实例，其表示应用程序的主舞台 —— 即应用程序主窗口的舞台。")]),t._v(" "),n("p",[t._v("创建了场景之后，你就可以完成主舞台，以便显示场景。为此，至少要做两件事:")]),t._v(" "),n("blockquote",[n("p",[t._v("✓ 调用主舞台的 "),n("code",[t._v("setScene")]),t._v(" 方法来设置要显示的场景。")]),t._v(" "),n("p",[t._v("✓ 调用主舞台的 "),n("code",[t._v("show")]),t._v(" 方法来显示场景。")]),t._v(" "),n("p",[t._v("调用 "),n("code",[t._v("show")]),t._v(" 方法后，应用程序的窗口对用户可见，用户可以开始与其中的控件进行交互。")])]),t._v(" "),n("p",[t._v("习惯上也会将标题设置在应用程序标题栏上进行显示，你可以通过调用主舞台的 "),n("code",[t._v("setTitle")]),t._v(" 方法来实现。 Click Me 应用程序 "),n("code",[t._v("start")]),t._v(" 方法的最后三行便实现了以上功能：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nprimaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTitle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The Click Me App"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nprimaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("当最后一行的 "),n("code",[t._v("show")]),t._v(" 方法被调用时，舞台便显示出来 —— 换句话说，如图 2-1 所示的窗口将显示在屏幕上。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/cross-reference.png",width:"80"}}),t._v("你可以在第 4 章了解到 "),n("code",[t._v("Stage")]),t._v(" 类的其他功能。")]),t._v(" "),n("h2",{attrs:{id:"检查-click-counter-程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#检查-click-counter-程序"}},[t._v("#")]),t._v(" 检查 Click Counter 程序")]),t._v(" "),n("p",[t._v("我已经对 Click Me 程序的每一行进行了详细解释，现在来看一下 Click Me 程序一个略微增强的版本 —— Click Counter。在第 1 章的清单 1-1 所示的 Click Me 程序中，当用户单击按钮时，按钮上显示的文本会发生变化。而在 Click Counter 程序中，用户单击按钮的次数会显示在一种称为标签（label）的控件中。")]),t._v(" "),n("p",[t._v("图 2-2 展示了运行中的 Click Counter 程序。顶部的窗口展示了首次启动 Click Counter 程序时的样子。如你所见，标签中显示的文本是 "),n("code",[t._v("You have not clicked the button.")]),t._v("。第二个窗口显示了第一次单击按钮后程序的样子。在这里，标签显示 "),n("code",[t._v("You have clicked once.")]),t._v("。第二次单击按钮时，标签再次更改，如第三个窗口所示。在这里，标签显示 "),n("code",[t._v("You have clicked 2 times.")]),t._v("。在此之后，每次点击按钮时，标签上显示的数字都会更新，以指示按钮被点击了多少次。")]),t._v(" "),n("blockquote",[n("p",[t._v("图 2-2：运行中的 Click Counter 程序。")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(384),alt:"Figure 2-2"}})]),t._v(" "),n("p",[t._v("清单 2-2 展示了 Click Counter 程序的源代码，紧跟着描述了它是如何工作的关键点:")]),t._v(" "),n("p",[n("strong",[t._v("Listing 2-2: The Click Counter Program")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("application"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javafx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClickCounter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),t._v("                                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →7")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →9")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →11")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →14")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Label")]),t._v(" lbl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →15")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" iClickCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →16")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stage")]),t._v(" primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →18")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the button ")]),t._v("\n    btn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →21")]),t._v("\n    btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click me please!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →22")]),t._v("\n    btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOnAction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →23")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the Label ")]),t._v("\n    lbl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Label")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →26")]),t._v("\n    lbl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You have not clicked the button."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →27")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the label and the button to a layout pane ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),t._v(" pane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BorderPane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →30")]),t._v("\n    pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lbl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →31")]),t._v("\n    pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCenter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →32")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the layout pane to a scene ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),t._v(" scene "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →35")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the scene to the stage, set the title ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and show the stage ")]),t._v("\n    primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScene")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scene"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →39")]),t._v("\n    primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTitle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Click Counter"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →40")]),t._v("\n    primaryStage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →41")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →44")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    iClickCount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →46")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iClickCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →47")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lbl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You have clicked once."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →49")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lbl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You have clicked "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" iClickCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" times."')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// →53")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("以下段落说明了 Click Me 程序的要点：")]),t._v(" "),n("p",[t._v("➝ 1："),n("code",[t._v("import")]),t._v(" 语句引用了 Click Me 程序将要用到的 "),n("code",[t._v("javafx")]),t._v(" 包。")]),t._v(" "),n("p",[t._v("➝ 7："),n("code",[t._v("ClickMe")]),t._v(" 类继承了 "),n("code",[t._v("javafx.application.Application")]),t._v("，说明 "),n("code",[t._v("ClickMe")]),t._v(" 类是一个 JavaFX 应用程序。")]),t._v(" "),n("p",[t._v("➝ 9：与其他 Java 程序一样，"),n("code",[t._v("main")]),t._v(" 方法是所有 JavaFX 程序的主入口。")]),t._v(" "),n("p",[t._v("➝ 11："),n("code",[t._v("main")]),t._v(" 方法调用 "),n("code",[t._v("Application")]),t._v(" 类定义的 "),n("code",[t._v("launch")]),t._v(" 方法。"),n("code",[t._v("launch")]),t._v(" 方法先创建 "),n("code",[t._v("ClickMe")]),t._v(" 类的实例，再调用 "),n("code",[t._v("start")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("➝ 14："),n("code",[t._v("javafx.scene.control.Button")]),t._v(" 类型的一个变量 "),n("code",[t._v("btn")]),t._v(" 被声明为一个类变量。代表 JavaFX 控件的变量通常被定义为类变量，以便可以在该类的任何方法中进行访问。")]),t._v(" "),n("p",[t._v("➝ 15：一个名为 "),n("code",[t._v("lbl")]),t._v("，类型为 "),n("code",[t._v("javafx.scene.control.Label")]),t._v(" 的类变量，可以在类的任何方法中访问它。")]),t._v(" "),n("p",[t._v("➝ 16：一个名为 "),n("code",[t._v("iClickCount")]),t._v(" 的类变量，用于跟踪用户单击按钮的次数。")]),t._v(" "),n("p",[t._v("➝ 18：在 "),n("code",[t._v("start")]),t._v(" 方法的声明上使用了 "),n("code",[t._v("@override")]),t._v(" 注解，表示该方法覆盖了 "),n("code",[t._v("Application")]),t._v(" 类提供的默认 "),n("code",[t._v("start")]),t._v(" 方法。 "),n("code",[t._v("start")]),t._v(" 方法接受一个名为 "),n("code",[t._v("primaryStage")]),t._v(" 的参数，它表示 Click Me 应用程序将在其中显示用户界面的窗口。")]),t._v(" "),n("p",[t._v("➝ 21："),n("code",[t._v("start")]),t._v(" 方法首先会创建一个 "),n("code",[t._v("Button")]),t._v(" 对象，并将其赋值给一个名为 "),n("code",[t._v("btn")]),t._v(" 的变量。")]),t._v(" "),n("p",[t._v("➝ 22：调用按钮的 "),n("code",[t._v("setText")]),t._v(" 方法将它显示的文本设置为 "),n("code",[t._v("Click me please!")]),t._v("。")]),t._v(" "),n("p",[t._v("➝ 23：调用 "),n("code",[t._v("setOnAction")]),t._v(" 为按钮创建事件处理程序。在这里，使用 Lambda 表达式在用户单击按钮时调用 "),n("code",[t._v("buttonClick")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("➝ 26：调用 "),n("code",[t._v("Label")]),t._v(" 类的构造函数创建一个新标签。")]),t._v(" "),n("p",[t._v("➝ 27：调用标签的 "),n("code",[t._v("setText")]),t._v(" 方法将标签的初始文本值设置为 "),n("code",[t._v("You have not clicked the button.")]),t._v("。")]),t._v(" "),n("p",[t._v("➝ 30：调用 "),n("code",[t._v("BorderPane")]),t._v(" 类的构造函数创建一个边界面板对象，并将名为 "),n("code",[t._v("pane")]),t._v(" 的变量作为它的引用 。边界面板将用于控制屏幕上显示的控件的布局。")]),t._v(" "),n("p",[t._v("➝ 31：调用边界面板的 "),n("code",[t._v("setTop")]),t._v(" 方法将标签添加到边界面板的顶部区域。")]),t._v(" "),n("p",[t._v("➝ 32：调用边界面板的 "),n("code",[t._v("setCenter")]),t._v(" 方法将按钮添加到边界面板的中心区域。")]),t._v(" "),n("p",[t._v("➝ 35：调用 "),n("code",[t._v("Scene")]),t._v(" 类的构造函数创建一个场景对象，并将第 30 行创建的边界面板传递给它的构造函数，从而将边界面板作为场景的根节点。此外，还将场景的尺寸设置为宽度 300 像素，高度 250 像素。")]),t._v(" "),n("p",[t._v("➝ 39："),n("code",[t._v("primaryStage")]),t._v(" 的 "),n("code",[t._v("setScene")]),t._v(" 方法用于将场景添加到主舞台。")]),t._v(" "),n("p",[t._v("➝ 40："),n("code",[t._v("setTitle")]),t._v(" 方法用于设置在主舞台标题栏中显示的文本。")]),t._v(" "),n("p",[t._v("➝ 41：调用 "),n("code",[t._v("show")]),t._v(" 方法以显示主舞台。当这一行执行后，屏幕上将显示如图 2-1 所示的窗口，用户可以开始与程序进行交互。")]),t._v(" "),n("p",[t._v("➝ 44：每当用户单击按钮时，都会调用 "),n("code",[t._v("buttonClick")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("➝ 46："),n("code",[t._v("iClickCount")]),t._v(" 变量会递增，以表示用户已经单击了按钮。")]),t._v(" "),n("p",[t._v("➝ 47："),n("code",[t._v("if")]),t._v(" 语句用于确定按钮是被点击了一次还是多次。")]),t._v(" "),n("p",[t._v("➝ 49：如果按钮第一次被点击，将标签文本被设置为 "),n("code",[t._v("You have clicked once.")]),t._v("。")]),t._v(" "),n("p",[t._v("➝ 53：否则，将标签文本设置为表示按钮被点击了多少次的字符串。")]),t._v(" "),n("p",[t._v("就是这样。如果你理解了 Click Counter 程序工作的细节，就可以继续学习第 3 章了。如果你还在纠结一些问题，我建议你花些时间回顾这一章，并在 TextPad、Eclipse 或 NetBeans 中尝试尝试 Click Counter 程序。")]),t._v(" "),n("p",[t._v("以下段落有助于阐明 Click Counter 程序和 JavaFX 中一些可能绊住你的关键点：")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("✓ 程序什么时候从静态（static）切换到非静态（non-static）？")]),t._v(" 像每个 Java 程序一样，JavaFX程序的主要入口点是静态 "),n("code",[t._v("main")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("在大多数 JavaFX 程序中，静态 "),n("code",[t._v("main")]),t._v(" 方法只做一件事：调用 "),n("code",[t._v("launch")]),t._v(" 方法启动程序的 JavaFX 部分。"),n("code",[t._v("launch")]),t._v(" 方法会创建 "),n("code",[t._v("ClickCounter")]),t._v(" 类的实例，然后调用 "),n("code",[t._v("start")]),t._v(" 方法。此时，因为已经创建了 "),n("code",[t._v("ClickCounter")]),t._v(" 类的实例，该程序不再在静态上下文中运行。")]),t._v(" "),n("p",[n("strong",[t._v("✓ "),n("code",[t._v("primaryStage")]),t._v(" 变量从哪里来？")]),t._v(" 当 "),n("code",[t._v("launch")]),t._v(" 方法调用 "),n("code",[t._v("launch")]),t._v(" 方法时，"),n("code",[t._v("primaryStage")]),t._v(" 变量将传递到 "),n("code",[t._v("start")]),t._v(" 方法。因此，"),n("code",[t._v("start")]),t._v(" 方法接收 "),n("code",[t._v("primaryStage")]),t._v(" 变量作为参数。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/technical-stuff.png",width:"50"}}),t._v("这就是为什么你找不到 "),n("code",[t._v("primaryStage")]),t._v(" 变量的单独声明。")]),t._v(" "),n("p",[n("strong",[t._v("✓ ->操作符是如何工作的？")]),t._v(" "),n("code",[t._v("->")]),t._v(" 操作符用于创建所谓的 Lambda 表达式。Lambda 表达式是 Java 8 的一个新特性，用于替代以前需要匿名类的情况。如果你不了解 Lambda 表达式的工作原理，不必担心，我会在第 3 章详细解释。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);